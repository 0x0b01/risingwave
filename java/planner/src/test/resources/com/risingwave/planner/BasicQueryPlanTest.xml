<Root>
    <TestCase name="select all columns from table">
        <Resource name="sql">
            <![CDATA[
select * from t
            ]]>
        </Resource>
        <Resource name="plan">
            <![CDATA[
RwBatchFilterScan(table=[[test_schema, t]], columns=[v1,v2,v3])
]]>
        </Resource>
    </TestCase>

    <TestCase name="insert into values">
        <Resource name="sql">
            <![CDATA[
insert into t values(1,4,2), (2,3,3), (3,4,4), (4,3,5)
            ]]>
        </Resource>
        <Resource name="plan">
            <![CDATA[
RwBatchInsertValues(table=[t], values=[((1,4,2:FLOAT),(2,3,3:FLOAT),(3,4,4:FLOAT),(4,3,5:FLOAT))])
]]>
        </Resource>
    </TestCase>

    <TestCase name="select with project">
        <Resource name="sql">
            <![CDATA[
select v3, v1+v2, v1-v2, v1*v2, v1/v2 from t
            ]]>
        </Resource>
        <Resource name="plan">
            <![CDATA[
RwBatchProject(v3=[$2], EXPR$1=[+($0, $1)], EXPR$2=[-($0, $1)], EXPR$3=[*($0, $1)], EXPR$4=[/($0, $1)])
  RwBatchFilterScan(table=[[test_schema, t]], columns=[v1,v2,v3])
            ]]>
        </Resource>
    </TestCase>

    <TestCase name="select with filter">
        <Resource name="sql">
            <![CDATA[
select * from t where v1 > 1
            ]]>
        </Resource>
        <Resource name="plan">
            <![CDATA[
RwBatchFilter(condition=[>($0, 1)])
  RwBatchFilterScan(table=[[test_schema, t]], columns=[v1,v2,v3])
            ]]>
        </Resource>
    </TestCase>
    <TestCase name="simple agg">
        <Resource name="sql">
            <![CDATA[
select sum(v3) from t
            ]]>
        </Resource>
        <Resource name="plan">
            <![CDATA[
RwBatchSortAgg(group=[{}], EXPR$0=[SUM($0)])
  RwBatchFilterScan(table=[[test_schema, t]], columns=[v3])
]]>
        </Resource>
    </TestCase>

        <TestCase name="simple agg with 2 sum, max, min">
        <Resource name="sql">
            <![CDATA[
select sum(v3), sum(v2), max(v1), min(v3) from t
            ]]>
        </Resource>
        <Resource name="plan">
            <![CDATA[
RwBatchSortAgg(group=[{}], EXPR$0=[SUM($0)], EXPR$1=[SUM($1)], EXPR$2=[MAX($2)], EXPR$3=[MIN($0)])
  RwBatchFilterScan(table=[[test_schema, t]], columns=[v3,v2,v1])
]]>
        </Resource>
    </TestCase>

    <TestCase name="hash agg with 2 sum">
        <Resource name="sql">
            <![CDATA[
select sum(v1), sum(v2) from t group by v1
            ]]>
        </Resource>
        <Resource name="plan">
            <![CDATA[
RwBatchProject(EXPR$0=[$1], EXPR$1=[$2])
  RwBatchHashAgg(group=[{0}], EXPR$0=[SUM($0)], EXPR$1=[SUM($1)])
    RwBatchFilterScan(table=[[test_schema, t]], columns=[v1,v2])
]]>
        </Resource>
    </TestCase>

    <TestCase name="select with non-key sum 1">
        <Resource name="sql">
            <![CDATA[
select sum(v1+v2),sum(v1+v3) from t
            ]]>
        </Resource>
        <Resource name="plan">
            <![CDATA[
RwBatchSortAgg(group=[{}], EXPR$0=[SUM($0)], EXPR$1=[SUM($1)])
  RwBatchProject($f0=[+($0, $1)], $f1=[+($0, $2)])
    RwBatchFilterScan(table=[[test_schema, t]], columns=[v1,v2,v3])
]]>
        </Resource>
    </TestCase>

    <TestCase name="select with non-key sum 2">
        <Resource name="sql">
            <![CDATA[
select sum(v1), sum(v3) from t
            ]]>
        </Resource>
        <Resource name="plan">
            <![CDATA[
RwBatchSortAgg(group=[{}], EXPR$0=[SUM($0)], EXPR$1=[SUM($1)])
  RwBatchFilterScan(table=[[test_schema, t]], columns=[v1,v3])
]]>
        </Resource>
    </TestCase>

    <TestCase name="select with non-key min">
        <Resource name="sql">
            <![CDATA[
select min(v1) from t
            ]]>
        </Resource>
        <Resource name="plan">
            <![CDATA[
RwBatchSortAgg(group=[{}], EXPR$0=[MIN($0)])
  RwBatchFilterScan(table=[[test_schema, t]], columns=[v1])
]]>
        </Resource>
    </TestCase>

    <TestCase name="select with non-key max">
        <Resource name="sql">
            <![CDATA[
select max(v1) from t
            ]]>
        </Resource>
        <Resource name="plan">
            <![CDATA[
RwBatchSortAgg(group=[{}], EXPR$0=[MAX($0)])
  RwBatchFilterScan(table=[[test_schema, t]], columns=[v1])
]]>
        </Resource>
    </TestCase>

    <TestCase name="select with non-key max with filter">
        <Resource name="sql">
            <![CDATA[
select max(v1) from t where v2>3
    ]]>
        </Resource>
        <Resource name="plan">
            <![CDATA[
RwBatchSortAgg(group=[{}], EXPR$0=[MAX($0)])
  RwBatchProject(v1=[$0])
    RwBatchFilter(condition=[>($1, 3)])
      RwBatchFilterScan(table=[[test_schema, t]], columns=[v1,v2])
            ]]>
        </Resource>
    </TestCase>

    <TestCase name="select with non-key avg">
        <Resource name="sql">
            <![CDATA[
select avg(v2) from t
            ]]>
        </Resource>
        <Resource name="plan">
            <![CDATA[
RwBatchSortAgg(group=[{}], EXPR$0=[AVG($0)])
  RwBatchFilterScan(table=[[test_schema, t]], columns=[v2])
]]>
        </Resource>
    </TestCase>

    <TestCase name="select with sum and group by">
        <Resource name="sql">
            <![CDATA[
select sum(v1), v2 from t group by v2
            ]]>
        </Resource>
        <Resource name="plan">
            <![CDATA[
RwBatchProject(EXPR$0=[$1], v2=[$0])
  RwBatchHashAgg(group=[{0}], EXPR$0=[SUM($1)])
    RwBatchFilterScan(table=[[test_schema, t]], columns=[v2,v1])
]]>
        </Resource>
    </TestCase>

    <TestCase name="select only">
        <Resource name="sql">
            <![CDATA[
select 100.0::DOUBLE/8.0::DOUBLE
]]>
        </Resource>
        <Resource name="plan">
            <![CDATA[
RwBatchProject(EXPR$0=[/(100.0:DOUBLE, 8.0:DOUBLE)])
  RwBatchValues(tuples=[[{ 0 }]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="filter expression for date">
        <Resource name="sql">
            <![CDATA[
            select v1 from t2 where v1 >= '1970-01-01'
]]>
        </Resource>
        <Resource name="plan">
            <![CDATA[
RwBatchFilter(condition=[>=($0, 1970-01-01)])
  RwBatchFilterScan(table=[[test_schema, t2]], columns=[v1])
            ]]>
        </Resource>
    </TestCase>
    <TestCase name="nested loop join">
        <Resource name="sql">
            <![CDATA[
            select * from t, t3 where t.v1 > t3.v1;
]]>
        </Resource>
        <Resource name="plan">
            <![CDATA[
RwBatchNestLoopJoin(condition=[>($0, $3)], joinType=[inner])
  RwBatchFilterScan(table=[[test_schema, t]], columns=[v1,v2,v3])
  RwBatchFilterScan(table=[[test_schema, t3]], columns=[v1])
]]>
        </Resource>
        <Resource name="json">
            <![CDATA[
            {
  "nodeType": "NESTED_LOOP_JOIN",
  "body": {
    "@type": "type.googleapis.com/risingwave.executor.proto.NestedLoopJoinNode",
    "joinCond": {
      "exprType": "GREATER_THAN",
      "body": {
        "@type": "type.googleapis.com/risingwave.expr.proto.FunctionCall",
        "children": [{
          "exprType": "INPUT_REF",
          "body": {
            "@type": "type.googleapis.com/risingwave.expr.proto.InputRefExpr"
          },
          "returnType": {
            "typeName": "INT32"
          }
        }, {
          "exprType": "INPUT_REF",
          "body": {
            "@type": "type.googleapis.com/risingwave.expr.proto.InputRefExpr",
            "columnIdx": 3
          },
          "returnType": {
            "typeName": "INT32"
          }
        }]
      },
      "returnType": {
        "typeName": "BOOLEAN"
      }
    }
  },
  "children": [{
    "nodeType": "SEQ_SCAN",
    "body": {
      "@type": "type.googleapis.com/risingwave.executor.proto.SeqScanNode",
      "tableRefId": {
        "schemaRefId": {
          "databaseRefId": {
          }
        }
      },
      "columnIds": [0, 1, 2]
    }
  }, {
    "nodeType": "SEQ_SCAN",
    "body": {
      "@type": "type.googleapis.com/risingwave.executor.proto.SeqScanNode",
      "tableRefId": {
        "schemaRefId": {
          "databaseRefId": {
          }
        },
        "tableId": 2
      },
      "columnIds": [0]
    }
  }]
}
]]>
        </Resource>
    </TestCase>
</Root>
