<Root>
    <TestCase name="query 1">
        <Resource name="sql">
            <![CDATA[
create materialized view T1 as select sum(v2) as V from t where v1>1
            ]]>
        </Resource>
        <Resource name="plan">
            <![CDATA[
RwStreamMaterializedView(name=[t1])
  RwStreamProject(v=[$STREAM_NULL_BY_ROW_COUNT($1, $0)])
    RwStreamAgg(group=[{}], v=[SUM($1)], Row Count=[COUNT()])
      RwStreamFilter(condition=[>($0, 1)])
        RwStreamTableSource(table=[[test_schema, t]], columns=[v1,v2])
]]>
        </Resource>
        <Resource name="json">
            <![CDATA[
{
  "input": [{
    "input": [{
      "input": [{
        "input": [{
          "tableSourceNode": {
            "tableRefId": {
              "schemaRefId": {
                "databaseRefId": {
                }
              }
            },
            "columnIds": [1, 2]
          }
        }],
        "filterNode": {
          "searchCondition": {
            "exprType": "GREATER_THAN",
            "returnType": {
              "typeName": "BOOLEAN"
            },
            "funcCall": {
              "children": [{
                "exprType": "INPUT_REF",
                "returnType": {
                  "typeName": "INT32"
                },
                "inputRef": {
                }
              }, {
                "exprType": "CONSTANT_VALUE",
                "returnType": {
                  "typeName": "INT32"
                },
                "constant": {
                  "body": "AAAAAQ=="
                }
              }]
            }
          }
        }
      }],
      "simpleAggNode": {
        "aggCalls": [{
          "type": "SUM",
          "args": [{
            "input": {
              "columnIdx": 1
            },
            "type": {
              "typeName": "INT32"
            }
          }],
          "returnType": {
            "typeName": "INT32"
          }
        }, {
          "type": "COUNT",
          "returnType": {
            "typeName": "INT64"
          }
        }]
      }
    }],
    "projectNode": {
      "selectList": [{
        "exprType": "STREAM_NULL_BY_ROW_COUNT",
        "returnType": {
          "typeName": "INT32"
        },
        "funcCall": {
          "children": [{
            "exprType": "INPUT_REF",
            "returnType": {
              "typeName": "INT64"
            },
            "inputRef": {
              "columnIdx": 1
            }
          }, {
            "exprType": "INPUT_REF",
            "returnType": {
              "typeName": "INT32"
            },
            "inputRef": {
            }
          }]
        }
      }]
    }
  }],
  "mviewNode": {
    "tableRefId": {
      "schemaRefId": {
        "databaseRefId": {
        }
      },
      "tableId": 1
    },
    "columnDescs": [{
      "columnType": {
        "typeName": "INT32"
      },
      "encoding": "RAW"
    }]
  }
}
]]>
        </Resource>>
    </TestCase>


    <TestCase name="query 2">
        <Resource name="sql">
            <![CDATA[
create materialized view T2 as select v1+v2 as V from t
            ]]>
        </Resource>
        <Resource name="plan">
            <![CDATA[
RwStreamMaterializedView(name=[t2])
  RwStreamProject(v=[+($0, $1)])
    RwStreamTableSource(table=[[test_schema, t]], columns=[v1,v2])
]]>
        </Resource>
        <Resource name="json">
            <![CDATA[
{
  "input": [{
    "input": [{
      "tableSourceNode": {
        "tableRefId": {
          "schemaRefId": {
            "databaseRefId": {
            }
          }
        },
        "columnIds": [1, 2]
      }
    }],
    "projectNode": {
      "selectList": [{
        "exprType": "ADD",
        "returnType": {
          "typeName": "INT32"
        },
        "funcCall": {
          "children": [{
            "exprType": "INPUT_REF",
            "returnType": {
              "typeName": "INT32"
            },
            "inputRef": {
            }
          }, {
            "exprType": "INPUT_REF",
            "returnType": {
              "typeName": "INT32"
            },
            "inputRef": {
              "columnIdx": 1
            }
          }]
        }
      }]
    }
  }],
  "mviewNode": {
    "tableRefId": {
      "schemaRefId": {
        "databaseRefId": {
        }
      },
      "tableId": 2
    },
    "columnDescs": [{
      "columnType": {
        "typeName": "INT32"
      },
      "encoding": "RAW"
    }]
  }
}
]]>
        </Resource>
    </TestCase>


    <TestCase name="query 3">
        <Resource name="sql">
            <![CDATA[
create materialized view T3 as select v2, sum(v1) as V from t group by v2
            ]]>
        </Resource>
        <Resource name="plan">
            <![CDATA[
RwStreamMaterializedView(name=[t3])
  RwStreamProject(v2=[$0], v=[$1])
    RwStreamFilter(condition=[<>($2, 0)])
      RwStreamAgg(group=[{0}], v=[SUM($1)], Row Count=[COUNT()])
        RwStreamTableSource(table=[[test_schema, t]], columns=[v2,v1])
]]>
        </Resource>
        <Resource name="json">
            <![CDATA[
{
  "input": [{
    "input": [{
      "input": [{
        "input": [{
          "tableSourceNode": {
            "tableRefId": {
              "schemaRefId": {
                "databaseRefId": {
                }
              }
            },
            "columnIds": [2, 1]
          }
        }],
        "hashAggNode": {
          "groupKeys": [{
          }],
          "aggCalls": [{
            "type": "SUM",
            "args": [{
              "input": {
                "columnIdx": 1
              },
              "type": {
                "typeName": "INT32"
              }
            }],
            "returnType": {
              "typeName": "INT32"
            }
          }, {
            "type": "COUNT",
            "returnType": {
              "typeName": "INT64"
            }
          }]
        }
      }],
      "filterNode": {
        "searchCondition": {
          "exprType": "NOT_EQUAL",
          "returnType": {
            "typeName": "BOOLEAN"
          },
          "funcCall": {
            "children": [{
              "exprType": "INPUT_REF",
              "returnType": {
                "typeName": "INT64"
              },
              "inputRef": {
                "columnIdx": 2
              }
            }, {
              "exprType": "CONSTANT_VALUE",
              "returnType": {
                "typeName": "INT64"
              },
              "constant": {
                "body": "AAAAAAAAAAA="
              }
            }]
          }
        }
      }
    }],
    "projectNode": {
      "selectList": [{
        "exprType": "INPUT_REF",
        "returnType": {
          "typeName": "INT32"
        },
        "inputRef": {
        }
      }, {
        "exprType": "INPUT_REF",
        "returnType": {
          "typeName": "INT32"
        },
        "inputRef": {
          "columnIdx": 1
        }
      }]
    }
  }],
  "mviewNode": {
    "tableRefId": {
      "schemaRefId": {
        "databaseRefId": {
        }
      },
      "tableId": 3
    },
    "columnDescs": [{
      "columnType": {
        "typeName": "INT32"
      },
      "encoding": "RAW"
    }, {
      "columnType": {
        "typeName": "INT32"
      },
      "encoding": "RAW"
    }]
  }
}
]]>
        </Resource>
    </TestCase>

    <TestCase name="query 4">
        <Resource name="sql">
            <![CDATA[
create materialized view T4 as select sum(v1)+sum(v2) as V from t
            ]]>
        </Resource>
        <Resource name="plan">
            <![CDATA[
RwStreamMaterializedView(name=[t4])
  RwStreamProject(v=[+($STREAM_NULL_BY_ROW_COUNT($2, $0), $STREAM_NULL_BY_ROW_COUNT($2, $1))])
    RwStreamAgg(group=[{}], agg#0=[SUM($0)], agg#1=[SUM($1)], Row Count=[COUNT()])
      RwStreamTableSource(table=[[test_schema, t]], columns=[v1,v2])
]]>
        </Resource>
        <Resource name="json">
            <![CDATA[
{
  "input": [{
    "input": [{
      "input": [{
        "tableSourceNode": {
          "tableRefId": {
            "schemaRefId": {
              "databaseRefId": {
              }
            }
          },
          "columnIds": [1, 2]
        }
      }],
      "simpleAggNode": {
        "aggCalls": [{
          "type": "SUM",
          "args": [{
            "input": {
            },
            "type": {
              "typeName": "INT32"
            }
          }],
          "returnType": {
            "typeName": "INT32"
          }
        }, {
          "type": "SUM",
          "args": [{
            "input": {
              "columnIdx": 1
            },
            "type": {
              "typeName": "INT32"
            }
          }],
          "returnType": {
            "typeName": "INT32"
          }
        }, {
          "type": "COUNT",
          "returnType": {
            "typeName": "INT64"
          }
        }]
      }
    }],
    "projectNode": {
      "selectList": [{
        "exprType": "ADD",
        "returnType": {
          "typeName": "INT32"
        },
        "funcCall": {
          "children": [{
            "exprType": "STREAM_NULL_BY_ROW_COUNT",
            "returnType": {
              "typeName": "INT32"
            },
            "funcCall": {
              "children": [{
                "exprType": "INPUT_REF",
                "returnType": {
                  "typeName": "INT64"
                },
                "inputRef": {
                  "columnIdx": 2
                }
              }, {
                "exprType": "INPUT_REF",
                "returnType": {
                  "typeName": "INT32"
                },
                "inputRef": {
                }
              }]
            }
          }, {
            "exprType": "STREAM_NULL_BY_ROW_COUNT",
            "returnType": {
              "typeName": "INT32"
            },
            "funcCall": {
              "children": [{
                "exprType": "INPUT_REF",
                "returnType": {
                  "typeName": "INT64"
                },
                "inputRef": {
                  "columnIdx": 2
                }
              }, {
                "exprType": "INPUT_REF",
                "returnType": {
                  "typeName": "INT32"
                },
                "inputRef": {
                  "columnIdx": 1
                }
              }]
            }
          }]
        }
      }]
    }
  }],
  "mviewNode": {
    "tableRefId": {
      "schemaRefId": {
        "databaseRefId": {
        }
      },
      "tableId": 4
    },
    "columnDescs": [{
      "columnType": {
        "typeName": "INT32"
      },
      "encoding": "RAW"
    }]
  }
}
]]>
        </Resource>
    </TestCase>

    <TestCase name="query 5">
        <Resource name="sql">
            <![CDATA[
create materialized view T5 as select sum(v1+v2) as V from t
            ]]>
        </Resource>
        <Resource name="plan">
            <![CDATA[
RwStreamMaterializedView(name=[t5])
  RwStreamProject(v=[$STREAM_NULL_BY_ROW_COUNT($1, $0)])
    RwStreamAgg(group=[{}], v=[SUM($0)], Row Count=[COUNT()])
      RwStreamProject($f0=[+($0, $1)])
        RwStreamTableSource(table=[[test_schema, t]], columns=[v1,v2])
]]>
        </Resource>
        <Resource name="json">
            <![CDATA[
{
  "input": [{
    "input": [{
      "input": [{
        "input": [{
          "tableSourceNode": {
            "tableRefId": {
              "schemaRefId": {
                "databaseRefId": {
                }
              }
            },
            "columnIds": [1, 2]
          }
        }],
        "projectNode": {
          "selectList": [{
            "exprType": "ADD",
            "returnType": {
              "typeName": "INT32"
            },
            "funcCall": {
              "children": [{
                "exprType": "INPUT_REF",
                "returnType": {
                  "typeName": "INT32"
                },
                "inputRef": {
                }
              }, {
                "exprType": "INPUT_REF",
                "returnType": {
                  "typeName": "INT32"
                },
                "inputRef": {
                  "columnIdx": 1
                }
              }]
            }
          }]
        }
      }],
      "simpleAggNode": {
        "aggCalls": [{
          "type": "SUM",
          "args": [{
            "input": {
            },
            "type": {
              "typeName": "INT32"
            }
          }],
          "returnType": {
            "typeName": "INT32"
          }
        }, {
          "type": "COUNT",
          "returnType": {
            "typeName": "INT64"
          }
        }]
      }
    }],
    "projectNode": {
      "selectList": [{
        "exprType": "STREAM_NULL_BY_ROW_COUNT",
        "returnType": {
          "typeName": "INT32"
        },
        "funcCall": {
          "children": [{
            "exprType": "INPUT_REF",
            "returnType": {
              "typeName": "INT64"
            },
            "inputRef": {
              "columnIdx": 1
            }
          }, {
            "exprType": "INPUT_REF",
            "returnType": {
              "typeName": "INT32"
            },
            "inputRef": {
            }
          }]
        }
      }]
    }
  }],
  "mviewNode": {
    "tableRefId": {
      "schemaRefId": {
        "databaseRefId": {
        }
      },
      "tableId": 5
    },
    "columnDescs": [{
      "columnType": {
        "typeName": "INT32"
      },
      "encoding": "RAW"
    }]
  }
}
]]>
        </Resource>
    </TestCase>

    <TestCase name="query 6">
        <Resource name="sql">
            <![CDATA[
create materialized view T6 as select sum(v1) as V from t group by v2
            ]]>
        </Resource>
        <Resource name="plan">
            <![CDATA[
RwStreamMaterializedView(name=[t6])
  RwStreamProject(v=[$1])
    RwStreamFilter(condition=[<>($2, 0)])
      RwStreamAgg(group=[{0}], v=[SUM($1)], Row Count=[COUNT()])
        RwStreamTableSource(table=[[test_schema, t]], columns=[v2,v1])
]]>
        </Resource>
        <Resource name="json">
            <![CDATA[
{
  "input": [{
    "input": [{
      "input": [{
        "input": [{
          "tableSourceNode": {
            "tableRefId": {
              "schemaRefId": {
                "databaseRefId": {
                }
              }
            },
            "columnIds": [2, 1]
          }
        }],
        "hashAggNode": {
          "groupKeys": [{
          }],
          "aggCalls": [{
            "type": "SUM",
            "args": [{
              "input": {
                "columnIdx": 1
              },
              "type": {
                "typeName": "INT32"
              }
            }],
            "returnType": {
              "typeName": "INT32"
            }
          }, {
            "type": "COUNT",
            "returnType": {
              "typeName": "INT64"
            }
          }]
        }
      }],
      "filterNode": {
        "searchCondition": {
          "exprType": "NOT_EQUAL",
          "returnType": {
            "typeName": "BOOLEAN"
          },
          "funcCall": {
            "children": [{
              "exprType": "INPUT_REF",
              "returnType": {
                "typeName": "INT64"
              },
              "inputRef": {
                "columnIdx": 2
              }
            }, {
              "exprType": "CONSTANT_VALUE",
              "returnType": {
                "typeName": "INT64"
              },
              "constant": {
                "body": "AAAAAAAAAAA="
              }
            }]
          }
        }
      }
    }],
    "projectNode": {
      "selectList": [{
        "exprType": "INPUT_REF",
        "returnType": {
          "typeName": "INT32"
        },
        "inputRef": {
          "columnIdx": 1
        }
      }]
    }
  }],
  "mviewNode": {
    "tableRefId": {
      "schemaRefId": {
        "databaseRefId": {
        }
      },
      "tableId": 6
    },
    "columnDescs": [{
      "columnType": {
        "typeName": "INT32"
      },
      "encoding": "RAW"
    }]
  }
}
]]>
        </Resource>
    </TestCase>

    <TestCase name="query 7">
        <Resource name="sql">
            <![CDATA[
create materialized view T7 as select sum(v1)+1 as V from t group by v2
            ]]>
        </Resource>
        <Resource name="plan">
            <![CDATA[
RwStreamMaterializedView(name=[t7])
  RwStreamProject(v=[+($1, 1)])
    RwStreamFilter(condition=[<>($2, 0)])
      RwStreamAgg(group=[{0}], agg#0=[SUM($1)], Row Count=[COUNT()])
        RwStreamTableSource(table=[[test_schema, t]], columns=[v2,v1])
]]>
        </Resource>
        <Resource name="json">
            <![CDATA[
{
  "input": [{
    "input": [{
      "input": [{
        "input": [{
          "tableSourceNode": {
            "tableRefId": {
              "schemaRefId": {
                "databaseRefId": {
                }
              }
            },
            "columnIds": [2, 1]
          }
        }],
        "hashAggNode": {
          "groupKeys": [{
          }],
          "aggCalls": [{
            "type": "SUM",
            "args": [{
              "input": {
                "columnIdx": 1
              },
              "type": {
                "typeName": "INT32"
              }
            }],
            "returnType": {
              "typeName": "INT32"
            }
          }, {
            "type": "COUNT",
            "returnType": {
              "typeName": "INT64"
            }
          }]
        }
      }],
      "filterNode": {
        "searchCondition": {
          "exprType": "NOT_EQUAL",
          "returnType": {
            "typeName": "BOOLEAN"
          },
          "funcCall": {
            "children": [{
              "exprType": "INPUT_REF",
              "returnType": {
                "typeName": "INT64"
              },
              "inputRef": {
                "columnIdx": 2
              }
            }, {
              "exprType": "CONSTANT_VALUE",
              "returnType": {
                "typeName": "INT64"
              },
              "constant": {
                "body": "AAAAAAAAAAA="
              }
            }]
          }
        }
      }
    }],
    "projectNode": {
      "selectList": [{
        "exprType": "ADD",
        "returnType": {
          "typeName": "INT32"
        },
        "funcCall": {
          "children": [{
            "exprType": "INPUT_REF",
            "returnType": {
              "typeName": "INT32"
            },
            "inputRef": {
              "columnIdx": 1
            }
          }, {
            "exprType": "CONSTANT_VALUE",
            "returnType": {
              "typeName": "INT32"
            },
            "constant": {
              "body": "AAAAAQ=="
            }
          }]
        }
      }]
    }
  }],
  "mviewNode": {
    "tableRefId": {
      "schemaRefId": {
        "databaseRefId": {
        }
      },
      "tableId": 7
    },
    "columnDescs": [{
      "columnType": {
        "typeName": "INT32"
      },
      "encoding": "RAW"
    }]
  }
}
]]>
        </Resource>
    </TestCase>
    <TestCase name="query 8">
        <Resource name="sql">
            <![CDATA[
create materialized view T8 as select sum(v1)+1 as V from t where v1>v2
            ]]>
        </Resource>
        <Resource name="plan">
            <![CDATA[
RwStreamMaterializedView(name=[t8])
  RwStreamProject(v=[+($STREAM_NULL_BY_ROW_COUNT($1, $0), 1)])
    RwStreamAgg(group=[{}], agg#0=[SUM($0)], Row Count=[COUNT()])
      RwStreamFilter(condition=[>($0, $1)])
        RwStreamTableSource(table=[[test_schema, t]], columns=[v1,v2])
            ]]>
        </Resource>
        <Resource name="json">
            <![CDATA[
{
  "input": [{
    "input": [{
      "input": [{
        "input": [{
          "tableSourceNode": {
            "tableRefId": {
              "schemaRefId": {
                "databaseRefId": {
                }
              }
            },
            "columnIds": [1, 2]
          }
        }],
        "filterNode": {
          "searchCondition": {
            "exprType": "GREATER_THAN",
            "returnType": {
              "typeName": "BOOLEAN"
            },
            "funcCall": {
              "children": [{
                "exprType": "INPUT_REF",
                "returnType": {
                  "typeName": "INT32"
                },
                "inputRef": {
                }
              }, {
                "exprType": "INPUT_REF",
                "returnType": {
                  "typeName": "INT32"
                },
                "inputRef": {
                  "columnIdx": 1
                }
              }]
            }
          }
        }
      }],
      "simpleAggNode": {
        "aggCalls": [{
          "type": "SUM",
          "args": [{
            "input": {
            },
            "type": {
              "typeName": "INT32"
            }
          }],
          "returnType": {
            "typeName": "INT32"
          }
        }, {
          "type": "COUNT",
          "returnType": {
            "typeName": "INT64"
          }
        }]
      }
    }],
    "projectNode": {
      "selectList": [{
        "exprType": "ADD",
        "returnType": {
          "typeName": "INT32"
        },
        "funcCall": {
          "children": [{
            "exprType": "STREAM_NULL_BY_ROW_COUNT",
            "returnType": {
              "typeName": "INT32"
            },
            "funcCall": {
              "children": [{
                "exprType": "INPUT_REF",
                "returnType": {
                  "typeName": "INT64"
                },
                "inputRef": {
                  "columnIdx": 1
                }
              }, {
                "exprType": "INPUT_REF",
                "returnType": {
                  "typeName": "INT32"
                },
                "inputRef": {
                }
              }]
            }
          }, {
            "exprType": "CONSTANT_VALUE",
            "returnType": {
              "typeName": "INT32"
            },
            "constant": {
              "body": "AAAAAQ=="
            }
          }]
        }
      }]
    }
  }],
  "mviewNode": {
    "tableRefId": {
      "schemaRefId": {
        "databaseRefId": {
        }
      },
      "tableId": 8
    },
    "columnDescs": [{
      "columnType": {
        "typeName": "INT32"
      },
      "encoding": "RAW"
    }]
  }
}
            ]]>
        </Resource>
    </TestCase>>

</Root>
